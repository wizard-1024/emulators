# Copyright (c) 2014 Dmitry Stefankov 

# $Id$


# Modules (M-20)

M20_CPU=m20_cpu
M20_SYS=m20_sys
M20_DRM=m20_drm
M20_CD=m20_cd
M20_MT=m20_mt
M20_LP=m20_lp


M20ru_CPU=m20ru_cpu
M20ru_SYS=m20ru_sys
M20ru_DRM=m20ru_drm
M20ru_CD=m20ru_cd
M20ru_MT=m20ru_mt
M20ru_LP=m20ru_lp

M20_ENG=m20_eng
M20_RUS=m20_rus

GETOPT=getopt
CODE2PCARD=code2pcard
DUMP_DRM=dump_drm
DUMP_MT=dump_mt
AUTOCODE_M20=autocode_m20


# Modules (SIMH)

SCP=scp
SIM_BUILDROMS=sim_BuildROMs
SIM_CONSOLE=sim_console
SIM_TAPE=sim_tape
SIM_DISK=sim_disk
SIM_ETHER=sim_ether
SIM_FIO=sim_fio
SIM_FRONTPANEL=sim_frontpanel
SIM_IMD=sim_imd
SIM_SERIAL=sim_serial
SIM_SOCK=sim_sock
SIM_TIMER=sim_timer
SIM_TMXR=sim_tmxr
SIM_VIDEO=sim_video
SIM_SCSI=sim_scsi


# Support files

M20_DEFS_H=m20_defs.h

M20ru_WIN_CP1251_H=m20_rus_win_cp1251.h 
M20ru_DOS_CP866_H=m20_rus_dos_cp866.h
M20ru_UNIX_KOI8R_H=m20_rus_unix_koi8_r.h
M20ru_UTF8_H=m20_rus_utf8.h


# Emulator

M20=m20
M20ru=m20ru



# Main Target

all: $(M20).exe $(M20ru).exe $(CODE2PCARD).exe $(AUTOCODE_M20).exe $(DUMP_DRM).exe $(DUMP_MT).exe


# Tools

CC=cl
LINK=link
RC=rc

APP_CC=cl
APP_LINK=link


# Flags to build

SIM_FLAGS=-DCRT_NONSTDC_NO_WARNINGS -D_CRT_SECURE_NO_WARNINGS -D_WINSOCK_DEPRECATED_NO_WARNINGS 
###-DSIM_NEED_GIT_COMMIT_ID
###NO_INLINE;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_WINSOCK_DEPRECATED_NO_WARNINGS;USE_DISPLAY;SIM_NEED_GIT_COMMIT_ID

user_inc_flags=-I.\include
user_flags=$(SIM_FLAGS) $(user_inc_flags)
rus_encoding=-DRUS_WIN_CP1251
#rus_encoding=-DRUS_DOS_CP866
#rus_encoding=-DRUS_UNIX_KOI8R
#rus_encoding=-DRUS_UTF8
rus_lang=-DRUSSIAN_LANGUAGE $(rus_encoding)

opt_flags=-Ox

cc_flags=$(opt_flags) -W3  -MT -DUSE_INT64 \
       -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 \
       -D_CRT_NONSTDC_NO_DEPRECATE=1 -D_WIN32_WINNT=0x0501 $(user_flags)
#cflags_2=-D_WINSOCK2_
#link_flags=/RELEASE /NODEFAULTLIB /INCREMENTAL:NO /PDB:NONE /MACHINE:x86
link_flags=/RELEASE /INCREMENTAL:NO /PDB:NONE
##console_flags=-subsystem:console,4.0
#gui_flags=-subsystem:windows,4.0
rc_flags=/r $(user_flags)


## dependencies

INCLUDES=$(M20_DEFS_H)  

M20_OBJS=$(M20_CPU).obj $(M20_SYS).obj $(M20_ENG).obj $(M20_DRM).obj $(M20_CD).obj $(M20_MT).obj \
        $(M20_LP).obj

M20ru_OBJS=$(M20ru_CPU).obj $(M20ru_SYS).obj $(M20_RUS).obj $(M20ru_DRM).obj $(M20ru_CD).obj \
           $(M20ru_MT).obj $(M20ru_LP).obj

SIMH_OBJS=$(SCP).obj $(SIM_CONSOLE).obj $(SIM_TAPE).obj $(SIM_TIMER).obj $(SIM_TMXR).obj \
          $(SIM_SOCK).obj $(SIM_SERIAL).obj $(SIM_DISK).obj $(SIM_FIO).obj $(SIM_ETHER).obj \
          $(SIM_IMD).obj $(SIM_VIDEO).obj $(SIM_FRONTPANEL).obj $(SIM_SCSI).obj
#$(SIM_BUILDROMS).obj

user_libs_flags=.\LIBS\vc\x64\pthreadVC2.lib
std_libs=advapi32.lib wsock32.lib Winmm.lib ws2_32.lib user32.lib $(user_libs_flags)

RUS_ENC_FILES=$(M20ru_WIN_CP1251_H) $(M20ru_DOS_CP866_H) $(M20ru_UNIX_KOI8R_H) $(M20ru_UTF8_H)



# Targets (files)

# M-20
$(M20_CPU).obj: $(M20_CPU).c  $(INCLUDES)
    $(CC) -c $(cc_flags) -Fo$(M20_CPU).obj $(M20_CPU).c

$(M20_SYS).obj: $(M20_SYS).c  $(INCLUDES)
    $(CC) -c $(cc_flags) -Fo$(M20_SYS).obj $(M20_SYS).c

$(M20_CD).obj: $(M20_CD).c  $(INCLUDES)
    $(CC) -c $(cc_flags) -Fo$(M20_CD).obj $(M20_CD).c

$(M20_DRM).obj: $(M20_DRM).c  $(INCLUDES)
    $(CC) -c $(cc_flags) -Fo$(M20_DRM).obj $(M20_DRM).c

$(M20_MT).obj: $(M20_MT).c  $(INCLUDES)
    $(CC) -c $(cc_flags) -Fo$(M20_MT).obj $(M20_MT).c

$(M20_LP).obj: $(M20_LP).c  $(INCLUDES)
    $(CC) -c $(cc_flags) -Fo$(M20_LP).obj $(M20_LP).c

$(M20_ENG).obj: $(M20_ENG).c  $(INCLUDES)
    $(CC) -c $(cc_flags) -Fo$(M20_ENG).obj $(M20_ENG).c


# SIMH
$(SCP).obj: $(SCP).c 
    $(CC) -c $(cc_flags) -Fo$(SCP).obj $(SCP).c

$(SIM_CONSOLE).obj: $(SIM_CONSOLE).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_CONSOLE).obj $(SIM_CONSOLE).c

$(SIM_TAPE).obj: $(SIM_TAPE).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_TAPE).obj $(SIM_TAPE).c

$(SIM_TIMER).obj: $(SIM_TIMER).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_TIMER).obj $(SIM_TIMER).c

$(SIM_TMXR).obj: $(SIM_TMXR).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_TMXR).obj $(SIM_TMXR).c

$(SIM_SOCK).obj: $(SIM_SOCK).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_SOCK).obj $(SIM_SOCK).c

$(SIM_SERIAL).obj: $(SIM_SERIAL).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_SERIAL).obj $(SIM_SERIAL).c

$(SIM_DISK).obj: $(SIM_DISK).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_DISK).obj $(SIM_DISK).c

$(SIM_FIO).obj: $(SIM_FIO).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_FIO).obj $(SIM_FIO).c

$(SIM_FRONTPANEL).obj: $(SIM_FRONTPANEL).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_FRONTPANEL).obj $(SIM_FRONTPANEL).c

$(SIM_ETHER).obj: $(SIM_ETHER).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_ETHER).obj $(SIM_ETHER).c

$(SIM_IMD).obj: $(SIM_IMD).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_IMD).obj $(SIM_IMD).c

$(SIM_VIDEO).obj: $(SIM_VIDEO).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_VIDEO).obj $(SIM_VIDEO).c

$(SIM_SCSI).obj: $(SIM_SCSI).c 
    $(CC) -c $(cc_flags) -Fo$(SIM_SCSI).obj $(SIM_SCSI).c

#$(SIM_BUILDROMS).obj: $(SIM_BUILDROMS).c 
#    $(CC) -c $(cc_flags) -Fo$(SIM_BUILDROMS).obj $(SIM_BUILDROMS).c

# Emulator (m-20 english message)
$(M20).exe: $(M20_OBJS) $(SIMH_OBJS)
    $(LINK) $(link_flags) $(console_flags) -out:$(M20).exe $(M20_OBJS) $(SIMH_OBJS) $(std_libs)


# Supplemental
$(GETOPT).obj: $(GETOPT).c $(GETOPT).h
    $(CC) -c $(cc_flags) -Fo$(GETOPT).obj $(GETOPT).c

$(CODE2PCARD).obj: $(CODE2PCARD).c $(GETOPT).obj
    $(CC) -c $(cc_flags) -Fo$(CODE2PCARD).obj $(CODE2PCARD).c

$(CODE2PCARD).exe: $(CODE2PCARD).obj $(GETOPT).obj
    $(LINK) $(link_flags) $(console_flags) -out:$(CODE2PCARD).exe $(CODE2PCARD).obj $(GETOPT).obj $(std_libs)

$(DUMP_DRM).obj: $(DUMP_DRM).c $(GETOPT).obj
    $(CC) -c $(cc_flags) -Fo$(DUMP_DRM).obj $(DUMP_DRM).c

$(DUMP_DRM).exe: $(DUMP_DRM).obj $(GETOPT).obj
    $(LINK) $(link_flags) $(console_flags) -out:$(DUMP_DRM).exe $(DUMP_DRM).obj $(GETOPT).obj $(std_libs)

$(DUMP_MT).obj: $(DUMP_MT).c $(GETOPT).obj
    $(CC) -c $(cc_flags) -Fo$(DUMP_MT).obj $(DUMP_MT).c

$(DUMP_MT).exe: $(DUMP_MT).obj $(GETOPT).obj
    $(LINK) $(link_flags) $(console_flags) -out:$(DUMP_MT).exe $(DUMP_MT).obj $(GETOPT).obj $(std_libs)

$(AUTOCODE_M20).obj: $(AUTOCODE_M20).c $(GETOPT).obj
    $(CC) -c $(cc_flags) -Fo$(AUTOCODE_M20).obj $(AUTOCODE_M20).c

$(AUTOCODE_M20).exe: $(AUTOCODE_M20).obj $(GETOPT).obj
    $(LINK) $(link_flags) $(console_flags) -out:$(AUTOCODE_M20).exe $(AUTOCODE_M20).obj $(GETOPT).obj $(std_libs)


# M-20
$(M20ru_CPU).obj: $(M20_CPU).c  $(INCLUDES)
    $(CC) -c $(cc_flags) $(rus_lang) -Fo$(M20ru_CPU).obj $(M20_CPU).c

$(M20ru_SYS).obj: $(M20_SYS).c  $(INCLUDES)
    $(CC) -c $(cc_flags) $(rus_lang) -Fo$(M20ru_SYS).obj $(M20_SYS).c

$(M20ru_CD).obj: $(M20_CD).c  $(INCLUDES)
    $(CC) -c $(cc_flags) $(rus_lang) -Fo$(M20ru_CD).obj $(M20_CD).c

$(M20ru_DRM).obj: $(M20_DRM).c  $(INCLUDES)
    $(CC) -c $(cc_flags) $(rus_lang) -Fo$(M20ru_DRM).obj $(M20_DRM).c

$(M20ru_MT).obj: $(M20_MT).c  $(INCLUDES)
    $(CC) -c $(cc_flags) $(rus_lang) -Fo$(M20ru_MT).obj $(M20_MT).c

$(M20ru_LP).obj: $(M20_LP).c  $(INCLUDES)
    $(CC) -c $(cc_flags) $(rus_lang) -Fo$(M20ru_LP).obj $(M20_LP).c

$(M20_RUS).obj: $(M20_RUS).c  $(INCLUDES) $(RUS_ENC_FILES)
    $(CC) -c $(cc_flags) $(rus_lang) -Fo$(M20_RUS).obj $(M20_RUS).c

# Emulator (m-20 russian message)
$(M20ru).exe: $(M20ru_OBJS) $(SIMH_OBJS) 
    $(LINK) $(link_flags) $(console_flags) -out:$(M20ru).exe $(M20ru_OBJS) $(SIMH_OBJS) $(std_libs)


# Targets (commands)

clean:
	del $(M20_OBJS)
	del $(SIMH_OBJS)
	del $(M20).exe
	del $(GETOPT).obj
	del $(CODE2PCARD).obj
	del $(CODE2PCARD).exe
        del $(DUMP_DRM).obj
        del $(DUMP_DRM).exe 
        del $(DUMP_MT).obj
        del $(DUMP_MT).exe
	del $(AUTOCODE_M20).obj
	del $(AUTOCODE_M20).exe
	del $(M20ru_OBJS)
	del $(M20ru).exe

cleanru:
	del $(M20ru_OBJS)
